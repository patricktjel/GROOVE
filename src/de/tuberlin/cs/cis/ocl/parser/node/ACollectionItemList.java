/* This file was generated by SableCC (http://www.sablecc.org/). */

package de.tuberlin.cs.cis.ocl.parser.node;

import java.util.*;
import de.tuberlin.cs.cis.ocl.parser.analysis.*;

@SuppressWarnings("nls")
public final class ACollectionItemList extends PCollectionItemList
{
    private PCollectionItem _collectionItem_;
    private final LinkedList<PNextCollectionItem> _nextCollectionItem_ = new LinkedList<PNextCollectionItem>();

    public ACollectionItemList()
    {
        // Constructor
    }

    public ACollectionItemList(
        @SuppressWarnings("hiding") PCollectionItem _collectionItem_,
        @SuppressWarnings("hiding") List<?> _nextCollectionItem_)
    {
        // Constructor
        setCollectionItem(_collectionItem_);

        setNextCollectionItem(_nextCollectionItem_);

    }

    @Override
    public Object clone()
    {
        return new ACollectionItemList(
            cloneNode(this._collectionItem_),
            cloneList(this._nextCollectionItem_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACollectionItemList(this);
    }

    public PCollectionItem getCollectionItem()
    {
        return this._collectionItem_;
    }

    public void setCollectionItem(PCollectionItem node)
    {
        if(this._collectionItem_ != null)
        {
            this._collectionItem_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._collectionItem_ = node;
    }

    public LinkedList<PNextCollectionItem> getNextCollectionItem()
    {
        return this._nextCollectionItem_;
    }

    public void setNextCollectionItem(List<?> list)
    {
        for(PNextCollectionItem e : this._nextCollectionItem_)
        {
            e.parent(null);
        }
        this._nextCollectionItem_.clear();

        for(Object obj_e : list)
        {
            PNextCollectionItem e = (PNextCollectionItem) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._nextCollectionItem_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._collectionItem_)
            + toString(this._nextCollectionItem_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._collectionItem_ == child)
        {
            this._collectionItem_ = null;
            return;
        }

        if(this._nextCollectionItem_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._collectionItem_ == oldChild)
        {
            setCollectionItem((PCollectionItem) newChild);
            return;
        }

        for(ListIterator<PNextCollectionItem> i = this._nextCollectionItem_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PNextCollectionItem) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
