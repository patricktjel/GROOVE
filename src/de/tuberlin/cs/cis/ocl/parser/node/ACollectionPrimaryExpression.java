/* This file was generated by SableCC (http://www.sablecc.org/). */

package de.tuberlin.cs.cis.ocl.parser.node;

import de.tuberlin.cs.cis.ocl.parser.analysis.*;

@SuppressWarnings("nls")
public final class ACollectionPrimaryExpression extends PPrimaryExpression
{
    private PLiteralCollection _literalCollection_;

    public ACollectionPrimaryExpression()
    {
        // Constructor
    }

    public ACollectionPrimaryExpression(
        @SuppressWarnings("hiding") PLiteralCollection _literalCollection_)
    {
        // Constructor
        setLiteralCollection(_literalCollection_);

    }

    @Override
    public Object clone()
    {
        return new ACollectionPrimaryExpression(
            cloneNode(this._literalCollection_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACollectionPrimaryExpression(this);
    }

    public PLiteralCollection getLiteralCollection()
    {
        return this._literalCollection_;
    }

    public void setLiteralCollection(PLiteralCollection node)
    {
        if(this._literalCollection_ != null)
        {
            this._literalCollection_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._literalCollection_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._literalCollection_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._literalCollection_ == child)
        {
            this._literalCollection_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._literalCollection_ == oldChild)
        {
            setLiteralCollection((PLiteralCollection) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
