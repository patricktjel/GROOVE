/* This file was generated by SableCC (http://www.sablecc.org/). */

package de.tuberlin.cs.cis.ocl.parser.node;

import de.tuberlin.cs.cis.ocl.parser.analysis.*;

@SuppressWarnings("nls")
public final class AInEquationOperator extends PEquationOperator
{
    private TNEqual _nEqual_;

    public AInEquationOperator()
    {
        // Constructor
    }

    public AInEquationOperator(
        @SuppressWarnings("hiding") TNEqual _nEqual_)
    {
        // Constructor
        setNEqual(_nEqual_);

    }

    @Override
    public Object clone()
    {
        return new AInEquationOperator(
            cloneNode(this._nEqual_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAInEquationOperator(this);
    }

    public TNEqual getNEqual()
    {
        return this._nEqual_;
    }

    public void setNEqual(TNEqual node)
    {
        if(this._nEqual_ != null)
        {
            this._nEqual_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._nEqual_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._nEqual_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._nEqual_ == child)
        {
            this._nEqual_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._nEqual_ == oldChild)
        {
            setNEqual((TNEqual) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
