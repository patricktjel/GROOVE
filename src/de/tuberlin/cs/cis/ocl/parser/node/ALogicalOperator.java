/* This file was generated by SableCC (http://www.sablecc.org/). */

package de.tuberlin.cs.cis.ocl.parser.node;

import de.tuberlin.cs.cis.ocl.parser.analysis.*;

@SuppressWarnings("nls")
public final class ALogicalOperator extends PLogicalOperator
{
    private PBooleanOperator _booleanOperator_;

    public ALogicalOperator()
    {
        // Constructor
    }

    public ALogicalOperator(
        @SuppressWarnings("hiding") PBooleanOperator _booleanOperator_)
    {
        // Constructor
        setBooleanOperator(_booleanOperator_);

    }

    @Override
    public Object clone()
    {
        return new ALogicalOperator(
            cloneNode(this._booleanOperator_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALogicalOperator(this);
    }

    public PBooleanOperator getBooleanOperator()
    {
        return this._booleanOperator_;
    }

    public void setBooleanOperator(PBooleanOperator node)
    {
        if(this._booleanOperator_ != null)
        {
            this._booleanOperator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._booleanOperator_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._booleanOperator_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._booleanOperator_ == child)
        {
            this._booleanOperator_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._booleanOperator_ == oldChild)
        {
            setBooleanOperator((PBooleanOperator) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
